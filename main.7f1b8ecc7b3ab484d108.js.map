{"version":3,"sources":["webpack:///./fetchCountries.js","webpack:///./index.js"],"names":["bodyList","document","querySelector","notifyErrorMany","delDOM","PNotify","error","title","text","notifyErrorNothing","renderCountries","arr","newUl","createElement","classList","add","newCountries","reduce","acc","country","name","insertAdjacentHTML","insertAdjacentElement","renderOneCountry","newCountry","langList","languages","language","capital","prettify","population","flag","num","toString","replace","countriesList","countryTable","remove","addEventListener","_","debounce","searchQuery","target","value","url","fetch","then","response","ok","Promise","reject","json","countries","length","catch","err"],"mappings":"4MAEMA,EAAWC,SAASC,cAAc,QAyBxC,IAAMC,EAAkB,WAChBC,IACAC,IAAQC,MAAM,CACNC,OAAO,EACPC,KAAM,iEAIhBC,EAAqB,WACnBL,IACAC,IAAQC,MAAM,CACNC,OAAO,EACPC,KAAM,2DAIhBE,EAAkB,SAACC,GACjBP,IACA,IAAIQ,EAAQX,SAASY,cAAc,MACnCD,EAAME,UAAUC,IAAI,gBAAiB,eAAgB,aAAc,QACnE,IAAIC,EAAeL,EAAIM,QAAO,SAACC,EAAKC,GAC5B,OAAOD,EAAG,iCAAoCC,EAAQC,KAAzC,UAClB,IACHR,EAAMS,mBAAmB,YAAaL,GACtChB,EAASsB,sBAAsB,YAAaV,IAG9CW,EAAmB,SAACZ,GAClBP,IACA,IAAIoB,EAAavB,SAASY,cAAc,OACxCW,EAAWV,UAAUC,IAAI,eAAgB,eAAgB,OAAQ,aACjE,IACIU,EADYd,EAAI,GAAGe,UACET,QAAO,SAACC,EAAKS,GAC9B,OAAOT,EAAG,iCAAoCS,EAASP,KAA1C,UAClB,IACHI,EAAWH,mBAAmB,YAA9B,iDACiDV,EAAI,GAAGS,KADxD,8DAGsBT,EAAI,GAAGiB,QAH7B,wCAIyBC,EAASlB,EAAI,GAAGmB,YAJzC,iEAMkBL,EANlB,qFASmCd,EAAI,GAAGoB,KAT1C,UASwDpB,EAAI,GAAGS,KAT/D,WAWApB,EAASsB,sBAAsB,YAAaE,IAG9CK,EAAW,SAACG,GAEV,OADQA,EAAIC,WACHC,QAAQ,kCAAmC,QAGtD9B,EAAS,WACf,IAAI+B,EAAgBlC,SAASC,cAAc,kBACvCkC,EAAenC,SAASC,cAAc,iBACZ,OAAlBiC,EAIiB,OAAjBC,GACIA,EAAaC,SAJbF,EAAcE,UClFTpC,SAASC,cAAc,gBAG/BoC,iBAAiB,QAASC,EAAEC,UDD1B,SAAyBC,GAChC,GAAiC,KAA7BA,EAAYC,OAAOC,MAAa,CACpCvC,IACA,IAAMwC,EAAM,yCAAyCH,EAAYC,OAAOC,MACxEE,MAAMD,GACLE,MAAK,SAACC,GAAD,OAAcA,EAASC,GAAKD,EAAWE,QAAQC,OAAOH,MAC3DD,MAAK,SAACC,GAAD,OAAcA,EAASI,UAC5BL,MAAK,SAAAM,GACMA,EAAUC,OAAS,IACflD,IAEJiD,EAAUC,OAAS,GAAKD,EAAUC,OAAS,IACvC3C,EAAgB0C,GAEC,IAArBA,EAAUC,QACN9B,EAAkB6B,MAGjCE,OAAM,SAAAC,GAAQ9C,UCjB2C,Q","file":"main.7f1b8ecc7b3ab484d108.js","sourcesContent":["import PNotify from '../node_modules/pnotify/dist/es/PNotify.js';\r\n\r\nconst bodyList = document.querySelector('body');\r\n\r\n\r\nexport default function fetchCountries (searchQuery) {\r\n        if (searchQuery.target.value !== ''){\r\n        delDOM();\r\n        const url = `https://restcountries.eu/rest/v2/name/${searchQuery.target.value}`;\r\n        fetch(url)\r\n        .then((response) => response.ok ? response : Promise.reject(response))\r\n        .then((response) => response.json())\r\n        .then(countries => {\r\n                if (countries.length > 10) {\r\n                        notifyErrorMany();\r\n                };\r\n                if (countries.length > 1 && countries.length < 10) {\r\n                        renderCountries(countries);\r\n                };\r\n                if (countries.length === 1){\r\n                        renderOneCountry (countries);\r\n                };\r\n        })\r\n        .catch(err => {notifyErrorNothing();});\r\n        };\r\n};\r\n\r\nconst notifyErrorMany = () => {\r\n        delDOM();\r\n        PNotify.error({\r\n                title: false,\r\n                text: 'Too many matches found. Please enter a more specific query!'\r\n        });\r\n};\r\n\r\nconst notifyErrorNothing = () => {\r\n        delDOM();\r\n        PNotify.error({\r\n                title: false,\r\n                text: 'No matches found. Please enter a more specific query!'\r\n        });\r\n};\r\n\r\nconst renderCountries = (arr) => {\r\n        delDOM();\r\n        let newUl = document.createElement('ul');\r\n        newUl.classList.add(\"coutries-list\", \"center-align\", \"card-panel\", \"lime\");\r\n        let newCountries = arr.reduce((acc, country) => {\r\n                return acc + `<li class=\"country-name-item\">${country.name}</li>`\r\n        }, '');\r\n        newUl.insertAdjacentHTML('beforeend', newCountries);\r\n        bodyList.insertAdjacentElement('beforeend', newUl);\r\n};\r\n\r\nconst renderOneCountry = (arr) => {\r\n        delDOM();\r\n        let newCountry = document.createElement('div');\r\n        newCountry.classList.add(\"country-info\", \"center-align\", \"cyan\", \"lighten-5\");\r\n        let languages = arr[0].languages;\r\n        let langList = languages.reduce((acc, language) => {\r\n                return acc + `<li class=\"country-langeuage\">${language.name}</li>`   \r\n        }, '');\r\n        newCountry.insertAdjacentHTML('beforeend',\r\n        `<h2 class=\"center-align\" style=\"dispay: flex\">${arr[0].name}</h2>\r\n        <div class=\"\">\r\n                <p>Capital: ${arr[0].capital}</p>\r\n                <p>Population: ${prettify(arr[0].population)}</p>\r\n                <ul>Languages:\r\n                        ${langList}\r\n                </ul>\r\n        </div>\r\n        <img class=\"\" width=\"200px\" src=\"${arr[0].flag}\" alt=\"${arr[0].name} flag\">`\r\n        );\r\n        bodyList.insertAdjacentElement('beforeend', newCountry);\r\n};\r\n\r\nconst prettify = (num) => {\r\n        let n = num.toString();\r\n        return n.replace(/(\\d{1,3}(?=(?:\\d\\d\\d)+(?!\\d)))/g, \"$1\" + ' ');\r\n};\r\n\r\nconst delDOM = () => {\r\nlet countriesList = document.querySelector('.coutries-list');\r\nlet countryTable = document.querySelector('.country-info');\r\n        if (countriesList !== null) {\r\n                countriesList.remove();\r\n                return;\r\n        };\r\n        if (countryTable !== null) {\r\n                countryTable.remove();\r\n        };\r\n};\r\n\r\n","import '../node_modules/pnotify/dist/PNotifyBrightTheme.css'\nimport fetchCountries from './fetchCountries.js'\n\nconst inputCountry = document.querySelector('#icon_prefix')\n\n\ninputCountry.addEventListener('input', _.debounce(fetchCountries, 500));\n"],"sourceRoot":""}